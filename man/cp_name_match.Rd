% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cp_name_match.R
\name{cp_name_match}
\alias{cp_name_match}
\title{Name Matching}
\usage{
cp_name_match(
  q = NULL,
  rank = NULL,
  code = NULL,
  trusted = NULL,
  verbose = NULL,
  start = 0,
  limit = 10,
  ...
)
}
\arguments{
\item{q}{(character) scientific name to match}

\item{rank}{(character) rank to restrict matches to. one of: domain,
superkingdom,
kingdom, subkingdom, infrakingdom, superphylum, phylum, subphylum,
infraphylum, superclass, class, subclass, infraclass, parvclass,
superlegion, legion, sublegion, infralegion, supercohort, cohort,
subcohort, infracohort, magnorder, superorder, grandorder, order,
suborder, infraorder, parvorder, superfamily, family, subfamily,
infrafamily, supertribe, tribe, subtribe, infratribe, suprageneric name,
genus, subgenus, infragenus, supersection, section, subsection, superseries,
series, subseries, infrageneric name, species aggregate, species,
infraspecific name, grex, subspecies, cultivar group, convariety,
infrasubspecific name, proles, natio, aberration, morph, variety,
subvariety, form, subform, pathovar, biovar, chemovar, morphovar, phagovar,
serovar, chemoform, forma specialis, cultivar, strain, other, unranked}

\item{code}{(character) nomenclatural code to restrict matches to. one of:
bacterial, botanical, cultivated, viral, zoological, unknown}

\item{trusted}{(logical) if \code{TRUE}, unmatched name will be inserted into
the names index. default: \code{FALSE}}

\item{verbose}{(logical) if \code{TRUE}, list alternatively considered name
matches. default: \code{FALSE}}

\item{start}{(integer) requested number of offset records. Default: 0}

\item{limit}{(integer) requested number of maximum records to be returned.
Default: 10; max: 1000}

\item{...}{curl options passed on to \link[crul:verb-GET]{crul::verb-GET}}
}
\description{
Match name against the name index
}
\examples{
\dontrun{
cp_name_match(q="Apis", rank = "genus")
cp_name_match(q="Agapostemon")
cp_name_match(q="Apis mellifera")
cp_name_match(q="Apis mellifer")
}
}
